pipeline {
    agent any
    stages {
        stage('scm checkout') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[credentialsId: 'token', url: 'https://github.com/vinuthapra/spring-boot-maven-demo.git']]])
            }
        }
        stage('Build') {
            steps {
                bat 'mvn compile'
                bat 'mvn clean'
                bat 'mvn clean package -DskipTests'
            }
        }
        stage('copy jars') {
            steps {
                bat 'mkdir Build_%BUILD_ID%'
                bat 'copy target/demo-0.0.1-SNAPSHOT.jar Build_%BUILD_ID%'
            }
        }
        stage('Commit Build ID') {
            steps {
                script {
                    def %BUILD_ID% = env.BUILD_NUMBER
                    def commitMessage = "Build ID: ${buildId}"
                    sh "git commit -am '${commitMessage}'"
                    sh "git push origin main"
                }
            }
        }
    }
}
